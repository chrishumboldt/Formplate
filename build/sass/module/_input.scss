/**
 * Author: Chris Humboldt
**/

// Table of contents
// Input
// Styles
// Input colour states
// Input groups
// Input icon

// Input
@mixin rocket-form-input($type: all) {
	.rf-inp {
		@include position(relative);
		input {
			@include width(100%);
			@include padding(14px);
			@include margin(0px);
			@include margin-bottom(1.5em);
			@include text-font($font-family);
			@include text-size(13px);
			@include background-colour($white);
			@include border($white);
			@include level(1);
			outline: none;
			-webkit-appearance: none;
			&:focus {
				@include level(2);
			}
			@include breakpoint(large) {
				@include text-size(14px);
			}
		}
      &._animate input {
			@include animate(all);
      }
	}
	@include rocket-form-input-styles($type);
	@include rocket-form-input-hover();
	@include rocket-form-input-groups();
	@include rocket-form-input-icon();
}

// Styles
@mixin rocket-form-input-styles($type: all) {
	@if $type == line {
		.rf-inp._s-line input {
			@include border($grey-form);
			@include border-radius(2px);
			&:focus {
				@include border($grey-dark);
			}
		}
	} @else if $type == flat {
		.rf-inp._s-flat input {
			@include background-colour($grey-x-light);
			@include border($grey-x-light);
			&:focus {
				@include border($grey-light);
			}
		}
	} @else if $type == raised {
		.rf-inp._s-raised {
			input {
				@include border-radius();
				@include rocket-form-shadow();
				&:focus {
					@include border($grey);
				}
			}
		}
	} @else {
		.rf-inp._s-line input {
			@include border($grey-form);
			@include border-radius(2px);
			&:focus {
				@include border($grey-dark);
				@include background-colour($white);
			}
		}
		.rf-inp._s-flat input {
			@include background-colour($grey-x-light);
			@include border($grey-x-light);
			&:focus {
				@include border($grey-light);
			}
		}
		.rf-inp._s-raised {
			input {
				@include border-radius();
				@include rocket-form-shadow();
				&:focus {
					@include border($grey);
				}
			}
		}
	}
}

// Input colour states
@mixin rocket-form-input-hover() {
	@each $colour-name, $colour in $ar-colours-form {
		.rf-inp._c-#{$colour-name} input {
			&:active,
			&:focus {
				@include border($colour);
			}
		}
	}
}

// Input groups
@mixin rocket-form-input-groups() {
	.rf-inp .input-group {
		@include row();
		input {
			@include margin-left(-1px);
		}
		input:first-child {
			@include margin-left(0px);
		}
		.input-icon {
			input {
				@include width(100%);
			}
			&:first-child input {
				@include margin-left(0px);
			}
		}
	}
	.rf-inp._s-line .input-group {
		input {
			@include border-radius(0px);
		}
		input:first-child {
			@include border-radius-left(2px);
		}
		input:last-child {
			@include border-radius-right(2px);
		}
		.input-icon {
			&:first-child input {
				@include border-radius-left(2px);
			}
			&:last-child input {
				@include border-radius-right(2px);
			}
		}
	}
	.rf-inp._s-raised .input-group {
		@include margin-bottom(1.5em);
		@include animate(all);
		@include rocket-form-shadow();
		input {
			@include margin-no();
			@include drop-shadow-no();
		}
	}
	.rf-inp .input-group-two {
		@extend .input-group;
		input,
		.input-icon {
			@include span(6);
		}
	}
	.rf-inp .input-group-three {
		@extend .input-group;
		input,
		.input-icon {
			@include span(4);
		}
	}
}

// Input icon
@mixin rocket-form-input-icon() {
	.rf-inp .input-icon {
		@include position(relative);
		// Icons
		i {
			@include position(absolute, margin-top ($space-small + 4px) right $space-small);
			@include font-size($size-base);
			@include level(4);
		}
		// Input
		input {
			@include padding-right($space-slight);
		}
	}
}
